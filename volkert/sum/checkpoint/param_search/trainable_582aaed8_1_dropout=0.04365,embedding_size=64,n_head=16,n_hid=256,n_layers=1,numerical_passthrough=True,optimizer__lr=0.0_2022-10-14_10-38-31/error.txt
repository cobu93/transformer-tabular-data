Failure # 1 (occurred at 2022-10-14_10-38-35)
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 893, in _process_trial
    results = self.trial_executor.fetch_result(trial)
  File "/opt/conda/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 707, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/opt/conda/lib/python3.8/site-packages/ray/_private/client_mode_hook.py", line 105, in wrapper
    return func(*args, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/ray/worker.py", line 1733, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(TuneError): [36mray::ImplicitFunc.train()[39m (pid=5583, ip=172.18.0.3, repr=trainable)
  File "/opt/conda/lib/python3.8/site-packages/ray/tune/trainable.py", line 315, in train
    result = self.step()
  File "/opt/conda/lib/python3.8/site-packages/ray/tune/function_runner.py", line 381, in step
    self._report_thread_runner_error(block=True)
  File "/opt/conda/lib/python3.8/site-packages/ray/tune/function_runner.py", line 531, in _report_thread_runner_error
    raise TuneError(
ray.tune.error.TuneError: Trial raised an exception. Traceback:
[36mray::ImplicitFunc.train()[39m (pid=5583, ip=172.18.0.3, repr=trainable)
  File "/opt/conda/lib/python3.8/site-packages/ray/tune/function_runner.py", line 262, in run
    self._entrypoint()
  File "/opt/conda/lib/python3.8/site-packages/ray/tune/function_runner.py", line 330, in entrypoint
    return self._trainable_func(self.config, self._status_reporter,
  File "/opt/conda/lib/python3.8/site-packages/ray/tune/function_runner.py", line 600, in _trainable_func
    output = fn()
  File "param_search.py", line 99, in trainable
    model = model.fit(X=all_features, y=all_labels)
  File "/opt/conda/lib/python3.8/site-packages/skorch/classifier.py", line 142, in fit
    return super(NeuralNetClassifier, self).fit(X, y, **fit_params)
  File "/opt/conda/lib/python3.8/site-packages/skorch/net.py", line 917, in fit
    self.partial_fit(X, y, **fit_params)
  File "/opt/conda/lib/python3.8/site-packages/skorch/net.py", line 876, in partial_fit
    self.fit_loop(X, y, **fit_params)
  File "/opt/conda/lib/python3.8/site-packages/skorch/net.py", line 789, in fit_loop
    self.run_single_epoch(dataset_train, training=True, prefix="train",
  File "/opt/conda/lib/python3.8/site-packages/skorch/net.py", line 826, in run_single_epoch
    step = step_fn(Xi, yi, **fit_params)
  File "/opt/conda/lib/python3.8/site-packages/skorch/net.py", line 723, in train_step
    self.optimizer_.step(step_fn)
  File "/opt/conda/lib/python3.8/site-packages/torch/optim/optimizer.py", line 89, in wrapper
    return func(*args, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/torch/optim/sgd.py", line 87, in step
    loss = closure()
  File "/opt/conda/lib/python3.8/site-packages/skorch/net.py", line 719, in step_fn
    step = self.train_step_single(Xi, yi, **fit_params)
  File "/opt/conda/lib/python3.8/site-packages/skorch/net.py", line 659, in train_step_single
    y_pred = self.infer(Xi, **fit_params)
  File "/opt/conda/lib/python3.8/site-packages/skorch/net.py", line 1062, in infer
    return self.module_(x, **fit_params)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/ndsl/architecture/attention.py", line 246, in forward
    output = self.decoder(output)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/linear.py", line 94, in forward
    return F.linear(input, self.weight, self.bias)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/functional.py", line 1753, in linear
    return torch._C._nn.linear(input, weight, bias)
RuntimeError: mat1 dim 1 must match mat2 dim 0

